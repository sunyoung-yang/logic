
1.메써드 오버로딩 이란?
똑같은 함수이름으로 타입,개수만 달리해서 넣는 것
ex) void a(int i);
void a(int i1,int i2); ...

2.메써드 오버로딩의 대표적인 예와,메써드 오버로딩시 달리해야할 2가지는?
나머지는 다 똑같고 '파라미터 속' 개수와 타입만 다르게 해야한다!!
대표적인 예는 system.out.println()

3.this는 무엇이며, This의 용도 2가지는?
this는 오버로딩 된 다른 생성자를 의미한다. 
[용도] 
1. this.자기자신을 정의할때
2. this 생성자

4.문자열 생성의 두가지 방법은?
new로 객체 생성하는 거랑 (인스턴스 객체 만들기)/ 직접 선언(직접 호출)하는 오번문제와 같이!

5.아래의 차이는?
 String str1 = new String("Simple String");
 String str2 = "Simple String";

str1가 string주소를 가지고 있어서 string함수 속 값을 가져온거고
str2  static변수를 가져온거 
***두개의 인스턴스는 달라!

6. 아래가 false 를 리턴하는 이유와 true로 리턴하게 할려면?
if(str1 == str2) 
다른 인스턴스를 나타내기 때문이다.
AAA str1 = new AAA();
AAA str2 = str1;

7.문제 11-1(263page) 프로그램을 작성하시오.

	class Person{ 
	 
	public static void main(String[] args) {
			
		String regiNum = "990925".concat(" ").concat(String.valueOf(1012999));
		System.out.println(regiNum);
		 }
	 }

8.String 과 StringBuffer 의 차이는?
스트링버퍼는 쓰레드에서 안전하지만 멀티 쓰레드에 안전하게 설계된 스트링 버퍼는 느리다는 단점이 있다.

9.아래를 String 함수등을 사용하여 프로그래밍 하시오.
//1. 마지막 3글자 자르기
String str = "ABCDEFG"; 
String result = 소스코딩      
System.out.println(result)
 //결과값EFG

[SubString]
	public static void main(String[] args) {
			
		String str = "ABCDEFG"; 
		String result = str.substring(4,7);   
		System.out.println(result);

--------or--------
[BuildString]
	public static void main(String[] args) {
			
		StringBuilder str = new StringBuilder("ABCDEFG");
		
		str.delete(0, 4);
		System.out.println(str);
	 }
	}
-------------------------------------------------------------------------------
11.아래를 String 함수등을 사용하여 프로그래밍 하시오.
//2. 특정문자 이후의 문자열 제거
String str = "ABCD/DEFGH";
String result = 소스코딩
System.out.println(result); 
//결과값 DEFGH

[SubString]
	public static void main(String[] args) {
			
		String str = "ABCD/DEFGH";
		String result = str.substring(5,10);
		System.out.println(result); 
	 }
--------or--------
[BuildString]
	public static void main(String[] args) {
			
		StringBuilder str = new StringBuilder("ABCD/DEFGH");
		str.delete(0, 5);
		System.out.println(str); 
	 }
-------------------------------------------------------------------------------

12. 아래를 프로그래밍 하시오.
Rectangle r1 = new Rectangle(5,6);
Rectangle r2 = new Rectangle(7,9);

Rectangle r3 = Rectangle.compareRect(r1,r2);

System.out.println(r3.getHeight() + " : " + r3.getWidth()  + "입니다.");
=============================
출력 : 9 : 7 입니다.

class Rectangle {

	private int width;
	private int height;
	
	Rectangle(int width,int height){
		this.width=width;
		this.height=height;
	}
	
	static Rectangle compareRect(Rectangle re1,Rectangle re2) {
		Rectangle max=re2;
		
		if(re1.width>re2.width) {
			max=re1;
		 
		}if(re1.height>re2.height) {
			max=re1;
		}
		return max;
	}
	
	public int getWidth() {                  //결과물의 값 int width를 출력해야하니까 int
		return width; 
	}
	public int getHeight() {                //결과물의 값 int height를 출력해야하니까 int
		return height;
	}
}

class Person{ 
	 
	public static void main(String[] args) {
			
		Rectangle r1 = new Rectangle(5,6);
		Rectangle r2 = new Rectangle(7,9);

		Rectangle r3 = Rectangle.compareRect(r1,r2);

		System.out.println(r3.getHeight()  + ":" + r3.getWidth()  + "입니다.");
	}

}