eq1. 절대 경로와 상대경로에 대하여 설명하시오.

2. set classpath=.;~~~~~~~~~~~  에서 classpath의 용도는?

3. 아래를 코딩 하시오.
GuguDan gu = new GuGuDan(7);
gu.show();  // 7단 출력
gu.setDan(8);
gu.show()  // 8단 출력.

public class GuguDan {
	
	int dan;
	
	GuguDan(int dan){
		this.dan=dan;
	}

	void setDan(int dan) {
		this.dan=dan;
			
		}
	
		
		void show() {
			for(int a=1;a<=9;a++) {
			System.out.println(dan+" x "+ a + " = " + dan * a);
		}
		
	}
}
-------------------------------------------------
public class GuguDanMain {

	public static void main(String[] args) {
		
		GuguDan gu= new GuguDan(7);
		gu.show();
		
		gu.setDan(8);
		gu.show();
		

	}

}


4.패키지란 무엇이며, 용도는?
만약 같은 이름의 클래스가 있을 경우, 패키지를 다르게 만들어 쓸 수 있게 만든다.
죽 패키지는 폴더 클래스는 파일명!

5.정보은닉이란?
private을 붙여서 원하는 컴파일 오류를 막는다.

6.아래의 프로그래밍을 하시오.
StarPrint sp = new StarPrint(5);
sp.floorShow(); //5층 피라밋
sp.setFloor(3); 
sp.floorShow(); //3층 피라밋
  *
 ***
*****

public class StarPrint {
	
	int num;
	
	StarPrint(int num){
		this.num=num;
	}
	
	void setFloor(int num) {
		this.num=num;
		
	}
	
	void floorShow() {
		for(int a=1;a<=num;a++) {
			for(int b=1;b<=a;b++) {
			System.out.print("*");
			}	System.out.println();	
	}
	
	}
	
}
--------------------------------------------------
public class StarPrintMain {

	public static void main(String[] args) {
		
		StarPrint sp = new StarPrint(5);
		sp.floorShow();
		
		sp.setFloor(3);
		sp.floorShow();

	}

}

7.객체지향 언어의 특징 4가지는(설명은 안해도 좋음)?
다양화
정보 은닉
상속
캡슐화


8. 아래의 접근 범위를 설명하시오.
-클래스 내에서의 public 과 default.
-멤버변수 와 함수의 private , default, protected(이거는 나중에)
public : 모든 범위에서 사용가능
default : 같은 클래스와 팩키지 내에서 사용 가능

private : 같은 클래스 내에서 사용 가능


9.캡슐화에 대하여 설명하시오.
여러 함수를 하나의 클래스로 만들어 간략하게 표현을 도움

10. 아래의 프로그램을 작성 하시오.

		Triangle t1 = new Triangle(10, 20);
		Triangle t2 = new Triangle(10, 20);
		Triangle t3 = new Triangle(10, 10);
		
		t1.equalTriangle(t2);
		t1.equalTriangle(t3);

===출력====
같은 삼각형 입니다.
다른 삼각형 입니다.

11.디자인패턴 책의 저자의 이름은 누구이며, 소개된 패턴의 이름만 한번씩 읽어 보세요.
