
1.내장객체의 영역 page, request, session, application 에 대하여 설명하시오.
- page : 하나의 jsp페이지 안에서만 공유할 값을 저장
- request : 한 번의 요청에 대한 정보가 저장되는 곳 웹 브라우저가 요청을 보낼 때마다 
	  새로운 request영역이 되고 request 객체를 이용하여 모든 jsp페이지에서 접근 가능하다.
- session : 한 명의 사용자와 관련된 정보가 저장되는 곳.
	  사용자가 이용하는 웹 브라우저 하나 당 영역이 존재
- application : 모든 사용자가 이용할 수 있는 정보를 저장 

2.emp 의 모든 데이터를 나타내시오.단 Datasource를 활용할것.
import edu.bit.ex.dto.Member1;

public class MemberDAO2 {
		
	private DataSource dateSource;  //connection pool 
	
	public MemberDAO2() {
		try {
			//Class.forName(driver); 
			 Context context = new InitialContext();  //server의 context에다가 어제 설치(커넥션풀을 사용하기 위한)를 했잖아. 그걸 불러온다.
			 dateSource = (DataSource) context.lookup("java:comp/env/jdbc/oracle"); //java:comp/env (이부분은 외워둬 자바 문법)
			 																		//jdbc/oracle : name
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
		
	public ArrayList<Member1> memberSelect() {
		ArrayList<Member1> dtos = new ArrayList<Member1>();
		
		Connection con =null;
		Statement stmt = null;
		ResultSet rs = null;
		String sql = "select * from emp";
		
	try {
		con= dataSource.getConnection();
		stmt = con.createStatement();
		rs = stmt.executeQuery(sql);
		
		while (rs.next()) {		
			
			String empno = rs.getString("empno");
			String ename = rs.getString("ename");
			String job = rs.getString("job");
			String mgr = rs.getString("mgr");
			String hiredate = rs.getString("hiredate");
			String sal = rs.getString("sal");
			String comm = rs.getString("comm");
			String deptno = rs.getString("deptno");
	
			Member1 dto = new Member1(empno, ename, job, mgr, hiredate, sal, comm, deptno);
			dtos.add(dto);
		}
	} catch (Exception e) {
		e.printStackTrace();
	} finally {
		try {
			if(rs != null) rs.close();
			if(stmt != null) stmt.close();
			if(con != null) con.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
		return dtos;	
	}
}
3.EL 에 대하여 설명하시오.
expression language/ 표현식(<%= value %>) 또는 액션 태그를 대신해서 값을 표현하는 언어
	${ value }

4.JSTL 에 대하여 설명하시오.
jsp 표준 태그 라이브러리(여러 프로그램이 공통으로 사용하는 코드를 모아놓은 코드의 집합)의 약어
자신만의 태그를 추가할 수 있는 기능을 제공한다.

5.아래의 조인에 대하여 설명하시오.
-equi join : 두 테이블 간의칼럼 값들이 서로 일치하는 경우 ('=' 연산자 사용)
-self join : 같은 테이블에서 2개의 속성을 연결하여 equi join을 하는 것
-outer join : join 조건에서 한쪽 값이 없더라도 행을 반환
=========================

6.EMP 테이블에서 부서 인원이 4명보다 많은 부서의 부서번호, 인원수, 급여의 합 출력
SELECT DEPTNO, COUNT(*), SUM(SAL) FROM EMP GROUP BY DEPTNO HAVING COUNT(*)>4;

7.각 사원별 커미션이 0 또는 NULL이고 부서위치가 'GO'로 끝나는 사원의 정보를 
-- 사원번호, 사원이름, 커미션, 부섭너호, 부서명, 부서위치 출력
-- 단, 보너스가 NULL이면 0으로 출력
-----------------------------------------------------------------------------------------
SELECT E.EMPNO,E.ENAME,decode(E.COMM,NULL,'NULL',0)COMM,E.DEPTNO,D.DNAME,D.LOC FROM EMP E,DEPT D 
WHERE E.DEPTNO = D.DEPTNO AND (E.COMM=0 OR E.COMM IS NULL) AND 
D.LOC LIKE '%GO';

8.1981년 6월 1일~1981년 12월 31일 입사자 중 부서명이 SALES인 사원의 부서번호, 사원명,
-- 직업, 입사일을 출력 (단, 입사일 오름차순 정렬)
------------------------------------------------------------------------------------------------------
SELECT E.DEPTNO, E.ENAME,D.DNAME,E.JOB, E.HIREDATE FROM EMP E, DEPT D WHERE 
 D.DNAME = 'SALES' AND E.DEPTNO = D.DEPTNO AND E.HIREDATE>=TO_DATE('1981-06-01') AND E.HIREDATE<=TO_DATE('1981/12/31') ORDER BY HIREDATE ASC;
 