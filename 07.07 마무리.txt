1. 아래와 같이 나오도록 프로그래밍 하시오(6월 4일 족보 문제)
==============================

Person person1 = new Person("jeong-pro", 27);
Person person2 = new Person("jeong-pro", 27);

System.out.println(person1.equals(person2));//true 로 반환

===============================
[Person]
public class Person {

	String name;
	int age;
	
	public Person(String name, int age) {
		this.name = name;
		this.age = age;
	}
	
	public boolean equals(Object ob) {
		if(this.name ==((Person)ob).name && this.age == ((Person)ob).age){
			return true;
		} else {
			return false;
		}
	}
}
[Main]
public class Person2 {
	
	public static void main(String[] args) {

	Person person1 = new Person("jeong-pro", 27);
	Person person2 = new Person("jeong-pro", 27);

	System.out.println(person1.equals(person2));
	
	}
}
2.scope 에서 singeton 과 prototye 의 차이에 대하여 설명하시오.
singeton : st1,st2 모두 student 참조 가리키는 주소가 같다.
prototye : st1,st2 모두 student를 참조하지만 가리키는 주소는 다른 것

3.아래를 프로그래밍 하시오.

-원, 삼각형, 사각형의 객체를 만든후, 반지름 5, 가로 세로 5 인 각각의 넓이를 구하는 프로그램을 작성하시오.

[interface]
package edu.bit.ex;

public interface IShape {
	
	double getArea();
}
[Rectangle]
package edu.bit.ex;

public class Rectangle implements IShape{
	
	private double width;
	private double height;

	public Rectangle() {}
	
	public Rectangle(double width, double height) {
		super();
		this.width = width;
		this.height = height;
	}

	public double getWidth() {
		return width;
	}

	public void setWidth(double width) {
		this.width = width;
	}

	public double getHeight() {
		return height;
	}

	public void setHeight(double height) {
		this.height = height;
	}

	@Override
	public double getArea() {
		return width*height;
	}
	
}
[Triangle]
package edu.bit.ex;

public class Triangle implements IShape{
	
	private double width;
	private double height;

	public Triangle() {}
	
	public Triangle(double width, double height) {
		super();
		this.width = width;
		this.height = height;
	}
	
	public double getWidth() {
		return width;
	}

	public void setWidth(double width) {
		this.width = width;
	}

	public double getHeight() {
		return height;
	}

	public void setHeight(double height) {
		this.height = height;
	}

	@Override
	public double getArea() {
		return (width*height)/2;
	}
	
}
[Circle]
package edu.bit.ex;

public class Circle implements IShape{
	
	private double radius;

	public Circle() {}
	
	public Circle(double radius) {
		super();
		this.radius = radius;
	}
	
	public double getRadius() {
		return radius;
	}

	public void setRadius(double radius) {
		this.radius = radius;
	}

	@Override
	public double getArea() {
		return radius*radius*(Math.PI);
	}
	
}
[bean]
package edu.bit.ex;


import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.context.annotation.Bean;

@Configurable
public class ApplicationConfig {
	
	@Bean
	public Rectangle shaperec() {
		
		Rectangle rec = new Rectangle(5,5);
		
		return rec;
	}
	
	@Bean
	public Triangle shapetri() {
		
		Triangle tri = new Triangle(5,5);
		
		return tri;
	}
	
	@Bean
	public Circle shapecir() {
		
		Circle cir = new Circle(5);
		
		return cir;
	}
}
[main]
package edu.bit.ex;

import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;


public class MainClass {

	public static void main(String[] args) {
		
		AbstractApplicationContext ctx = new  AnnotationConfigApplicationContext(ApplicationConfig.class);
		
		Rectangle shaperec = ctx.getBean("shaperec",Rectangle.class);
		System.out.println(shaperec.getArea());
		
		Triangle shapetri = ctx.getBean("shapetri",Triangle.class);
		System.out.println(shapetri.getArea());
		
		Circle shapecir = ctx.getBean("shapecir",Circle.class);
		System.out.println(shapecir.getArea());
		
		ctx.close();
	}
}

4. javascript 에서 함수의 2가지 종류에 대하여 만드는 법과 호출하는 방법은?
1) var 함수이름 =function() {}
함수이름();
console.log(함수이름());

2) function 함수이름() {}
함수이름();
console.log(함수이름());
==========================================
실전 면접
 자기가 모르는 부분이 있으면 어떻게 하겠느냐?