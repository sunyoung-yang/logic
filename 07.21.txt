1.
스프링 MVC 게시판 2 작성시
클라이언트의 요청에 따라 맨처음 DispatcherServlet 에 가게되고
HandlerMapping 이 찾아준 컨트롤러의 함수를 실행하게 된다

여기서 
Controller는 멤버변수로 Service service를 가지고
Service는 멤버변수로 DAO dao 를 가지게되는데
* DispatcherServlet > Controller > Service > DAO 순으로 의존

이때
Controller 클래스에 @Controller 로 빈을 만들어두고
Service 클래스에 @Service로 빈을 만들어두고
DAO 클래스에 @Repository로 빈을 만들어두어서 
각자 해당 멤버변수가 필요한곳에 @AutoWired 로 만들어진 빈을 주입해서 사용한다 ( new )



2.
@Component 는 해당 클래스에 어노테이션을 선언해서 빈을 만들겠다는 의미이고
이와 비슷한 기능을하는 @Controller , @Service , @Repository 가 있다
* HTML 의  <div> 와 시멘틱태그  같이 동일한 기능에 의미부여 느낌

세팅은
servlet-context.xml 에서 ( DispatcherServlet 설정 파일 )

<annotation-driven />            			//어노테이션 사용한다?

<context:component-scan base-package=" ~ " /> 	// "~" 하위경로에서 @Component 찾는다?  	



3.
컨트롤러 에 값을 불러오거나 컨트롤러에서 View에 값을 전달하는 방법에는

- 값을 불러오는 방법
파라미터에 ~
① HttpServletRequest request
② @RequestParam
③ 커맨드객체 이용
④ @PathVariable

- View에 값을 전달하는 방법
① 파라미터에 Model model
② @RequestMapping 함수의 type을 ModelAndView


가 있는데 이중 커맨드객체를 이용하는 방법에 대해서 설명하면

클래스를 하나 새로만들어 ( VO 형식 )
@Controller 클래스의 @RequestMapping 함수의 파라미터에 넣어주면
받아오는 값들을 자동으로 커맨드객체 생성후 해당객체의 멤버변수에 넣어준다
그래서 함수 내에서 getter 로 꺼내쓰면 된다


* 컨트롤러에 값을 받아오는것 뿐만 아니라 View에도 자동으로 커맨드객체를 전달까지 한다
=> View에서의 기본 커맨드객체명은 첫글자만 소문자 // @ModelAttribute로 수정 가능

** 커맨드객체는 default 생성자가 필수로 있어야 한다
** 커맨드객체의 멤버변수명과 받아오는 key 값이 무조건 일치해야 한다



4.
완성하시오



5.
//// type=button 일때
var btnNode = document.getElementById(" 버튼의 id " ); 
btnNode.addEventListener("click" , function() {
	document.getElementById(" form의 id ").submit( );
})

=> 버튼을 누르면 submit


//// type=submit 일때

=> 누르면 submit
 

그런데 
submit의 유효성 검사를 하고싶으면

//// type=button 일때
위 구문의 addEventListener의 파라미터인 핸들러에서 if구문 추가

//// type=submit 일때
document.getElementById(" form의 id ").onsubmit = function( ) {
	if 구문 추가후 return false , return true // 제출하지 않으려면 false 
}


*** 유효성검사는 javascript( 클라이언트 )로 하는것보다 Controller( 서버 )에서 @Valid로 하는것이 좋다



6.
jQuery는 javascript에서 자주 쓰이는 함수의 라이브러리
jQuery가 호환성이 더 좋다



