  
1.Collection framework 의 상속 관계를 그리시오.

2.List 의 특징은 무엇인가요?
1. 인스턴스의 저장 순서를 유지한다.
2. 동일한 인스턴스의 중복 저장을 허용한다.

3.ArrayList 와 LinkedList 의 차이는?
ArrayList : 배열 기반 자료구조(배열을 이용하여 인스턴스 저장)
LinkedList : 리스트 기반 자료구조(리스트를 구성하여 인스턴스 저장)

4.아래의 List 객체에서 순차적 접근방법 3가지로 출력하시오.
public class Box {
       public static void main(String[] args) {
    	   List<String> list = new LinkedList<>();   
    	   
    	   // 컬렉션 인스턴스에 문자열 인스턴스 저장
    	   list.add("Toy");
    	   list.add("Box");
    	   list.add("Robot");
   
    //--------------get()------------------
    	   for(int i=0;i<list.size();i++) {
    		   System.out.print(list.get(i)+'\t');
    	   }System.out.println();
    	   
     //--------------Iterator-----------------
    	   Iterator<String> itr = list.iterator();
    	   
    	   while(itr.hasNext()) {
    		  System.out.print(itr.next()+'\t');
    	   }System.out.println();
    	   
    	   for(Iterator<String> itr1 = list.iterator();itr1.hasNext();) {
    		   System.out.print(itr1.next()+'\t');
    	   } System.out.println();
    			   
    //---------------enhanced-------------------
    		for(String e :list) {
    			System.out.print(e.toString()+'\t');
    		}System.out.println();
       }
}
-------------------------------------------
   List<String> list = new LinkedList<>();   
   
   // 컬렉션 인스턴스에 문자열 인스턴스 저장
   list.add("Toy");
   list.add("Box");
   list.add("Robot");
=======================
5.hasSet을 이용하여 로또 번호를 뽑아내시오.
public class Nad {

	public static void main(String[] args) {
	
		HashSet<Integer> set = new HashSet<>();
		
		while(set.size()<6) {
			set.add((int)(Math.random()*45)+1);
		}
		
		Iterator<Integer> itr =  set.iterator();
		  
		while(itr.hasNext()) {
			System.out.println(itr.next());
		}
		   }
	}

6.아래를 인스턴스 수가 2가 나오도록 수정하시오.      
        HashSet<Num> set = new HashSet<>();
        
        set.add(new Num(7799));
        set.add(new Num(9955));
        set.add(new Num(7799));

        System.out.println("인스턴스 수: " + set.size());
---------------------------------------------------------
import java.util.HashSet;

class Num {
	private int num;
	public Num(int num) {
		this.num=num;
	}
	@Override
	public String toString() {
		return String.valueOf(num);
	}
	@Override
	public int hashCode() {
		return num%3;
	}
	@Override
	public boolean equals(Object ob) {
		if(num==((Num)ob).num)
			return true;
		else
			return false;
	}
}

public class Nad {

	public static void main(String[] args) {
		HashSet<Num> set = new HashSet<>();
        
        set.add(new Num(7799));
        set.add(new Num(9955));
        set.add(new Num(7799));

        System.out.println("인스턴스 수: " + set.size());
	}
}

7.HashSet의 원리를 설명하시오.
hashcode를 이용하여 동일결과값이 나오는 것끼리 군집을 형성하여 군집끼리  equals메소드를 이용해 서로 같은 인스턴스인지 중복을 확인한다.
이때 true값이 리턴되면 중복이므로 중복된 값을 저장하지 않는다.

8.object 의 hashcode 함수에 대하여 설명하시오.
서로 중복되는 값을 군집으로 형성하여 분류함.

9.아래 태그에 대하여 설명하시오.
- form 태그 및 action 속성및 method 속성
form 태그: 폼입력하여 서버접속
action: form data를 서버로 제출할 때 해당 데이터가 도착할 url 명시
method: form data가 서버로 제출될 때 사용되는 HTTP 메소드
	 get과 post가 있음.
	get : url에 form data를 추가하여 서버로 전달
	post : form data를 별도로 첨부하여 서버로 전달
- checkbox 와 radio 
체크박스: 옵션을 이용하여 아이콘을 눌렀을 시 리스트가 뜬다,
radio는 동그라미 체크형태

